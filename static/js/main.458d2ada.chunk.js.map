{"version":3,"sources":["component/Card.js","component/List.js","App.js","index.js"],"names":["Card","props","useState","cardName","setCardName","console","log","isCardEditing","setCardEditing","initialCardTemplate","className","type","onClick","edingCardTemplate","onSubmit","e","preventDefault","addCardTask","alert","id","onChange","target","value","name","autoComplete","viewingCardTemplate","viewCard","List","setName","isEditing","setEditing","initialTemplate","edingTemplate","addTask","cards","setCards","newCard","nanoid","cardlist","map","card","viewingTemplate","deleteList","view","CARD","App","tasks","lists","setLists","tasklist","list","remainingLists","filter","newList","role","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.458d2ada.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Card(props) {\n  const [cardName, setCardName] = useState('');\n  function handleCardChange(e) {\n    setCardName(e.target.value);\n  }\n\n  function handleCardSubmit(e) {\n    e.preventDefault();\n    if (cardName) {\n      props.addCardTask(cardName);\n      console.log(cardName);\n      setCardName('');\n    } else {\n      alert('no input');\n    }\n  }\n\n  console.log(props);\n  const [isCardEditing, setCardEditing] = useState(props.isCardEditing);\n  const initialCardTemplate = (\n    <div className='initiallistcard'>\n      {/* <div className='listdiv'>initial card{props.name}</div> */}\n      <button type='submit' className='addButton' onClick={() => setCardEditing(1)}>\n        + Add a Card\n      </button>\n    </div>\n  );\n\n  const edingCardTemplate = (\n    <form className='cardList' onSubmit={handleCardSubmit}>\n      <input\n        type='text'\n        id='new-card-list-input'\n        className='addButton'\n        onChange={handleCardChange}\n        name='text'\n        autoComplete='off'\n        value={cardName}></input>\n      <button type='submit' className='addButton'>\n        Add Card\n      </button>\n      <button type='button' className='deleteButton' onClick={() => setCardEditing(0)}>\n        X\n      </button>\n    </form>\n  );\n\n  const viewingCardTemplate = (\n    <div className='viewinglistcard'>\n      <div className='listdiv'>{props.name}</div>\n      {/* <button type='submit' className='addButton' >+ Add a card</button> */}\n    </div>\n  );\n\n  let viewCard = '';\n  whichviewtorender();\n  function whichviewtorender() {\n    console.log(isCardEditing);\n\n    if (isCardEditing === 0) {\n      console.log('0');\n      viewCard = initialCardTemplate;\n    } else if (isCardEditing === 1) {\n      console.log('1');\n      viewCard = edingCardTemplate;\n    } else {\n      console.log('2');\n      viewCard = viewingCardTemplate;\n    }\n  }\n\n  return <div className='cardTodo'>{viewCard}</div>;\n}\n\nCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  addCardTask: PropTypes.func.isRequired,\n  isCardEditing: PropTypes.number.isRequired,\n  // cards:PropTypes.array.isRequired,\n};\nexport default Card;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport { nanoid } from 'nanoid';\n\nfunction List(props) {\n  const [name, setName] = useState('');\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (name) {\n      props.addTask(name);\n      setName('');\n    } else {\n      alert('no input');\n    }\n  }\n\n  const [isEditing, setEditing] = useState(props.isEditing);\n\n  const initialTemplate = (\n    <div className='list'>\n      <button type='submit' className='addButton' onClick={() => setEditing(1)}>\n        + Add a list\n      </button>\n    </div>\n  );\n\n  const edingTemplate = (\n    <form className='list' onSubmit={handleSubmit}>\n      <input\n        type='text'\n        id='new-list-input'\n        className='listinput'\n        onChange={handleChange}\n        name='text'\n        autoComplete='off'\n        value={name}></input>\n      <button type='submit' className='addButton'>\n        Add List\n      </button>\n      <button type='button' className='deleteButton' onClick={() => setEditing(0)}>\n        X\n      </button>\n    </form>\n  );\n\n  //cards//\n  const [cards, setCards] = useState(props.cards);\n  console.log(props.cards);\n  function addCardTask(name) {\n    const newCard = { id: 'card-' + nanoid(), name: name, isCardEditing: 2 };\n    setCards([newCard, ...cards]);\n  }\n\n  const cardlist = cards.map((card) => (\n    <Card\n      id={card.id}\n      name={card.name}\n      key={card.id}\n      isCardEditing={card.isCardEditing}\n      addCardTask={addCardTask}\n    />\n  ));\n\n  const viewingTemplate = (\n    <div className='list'>\n      <div className='viewinglistdiv'>{props.name}</div>\n\n      <button\n        type='button'\n        className='btn btn__danger'\n        onClick={() => {\n          props.deleteList(props.id);\n        }}>\n        Delete <span className='visually-hidden'>{props.name}</span>\n      </button>\n      {cardlist}\n      {/* <button type='submit' className='addButton' >+ Add a card</button> */}\n    </div>\n  );\n\n  let view = '';\n  whichviewtorender();\n  function whichviewtorender() {\n    if (isEditing === 0) {\n      view = initialTemplate;\n    } else if (isEditing === 1) {\n      view = edingTemplate;\n    } else {\n      view = viewingTemplate;\n    }\n  }\n\n  return <div className='todo'>{view}</div>;\n}\n\nList.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  addTask: PropTypes.func.isRequired,\n  isEditing: PropTypes.number.isRequired,\n  cards: PropTypes.array.isRequired,\n  deleteList: PropTypes.func.isRequired,\n};\nexport default List;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './index.css';\nimport PropTypes from 'prop-types';\nimport List from './component/List';\nimport { nanoid } from 'nanoid';\n// import Form from './component/Form';\n\nconst CARD = [{ id: 'card-0', name: '', isCardEditing: 0 }];\n\nfunction App(props) {\n  const [lists, setLists] = useState(props.tasks);\n\n  const tasklist = lists.map((list) => (\n    <List\n      id={list.id}\n      name={list.name}\n      key={list.id}\n      isEditing={list.isEditing}\n      addTask={addTask}\n      cards={CARD}\n      deleteList={deleteList}\n    />\n  ));\n\n  function deleteList(id) {\n    const remainingLists = lists.filter((list) => id !== list.id);\n    setLists(remainingLists);\n  }\n\n  function addTask(name) {\n    const newList = { id: 'todo-' + nanoid(), name: name, isEditing: 2 };\n    setLists([newList, ...lists]);\n  }\n\n  return (\n    <div className='listapp'>\n      <div className='heading'>Trello-Like </div>\n      <div role='list' className='tasklist'>\n        {tasklist}\n      </div>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  name: PropTypes.string,\n  tasks: PropTypes.array.isRequired,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst DATA = [\n  { id: 'task-0', name: '', isEditing: 0 },\n  // { id: 'task-1', name: 'Sleep' },\n  // { id: 'task-2', name: 'Repeat' },\n];\n\nReactDOM.render(<App tasks={DATA} />, document.getElementById('root'));\n"],"sourceRoot":""}